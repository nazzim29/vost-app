{"ast":null,"code":"import MatiereService from \"@/services/MatiereService\";\n\nconst defaultState = () => ({\n  matieres: []\n});\n\nconst usersModule = {\n  state: defaultState(),\n  mutations: {\n    getMatieres(state, matieres) {\n      console.log(matieres);\n      state.matieres = matieres;\n    }\n\n  },\n  actions: {\n    getMatieres(context, query) {\n      console.log(query);\n      return MatiereService.get(query).then(res => {\n        console.log(res);\n        return context.commit(\"getMatieres\", res.data);\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    //update matiere\n    updateMatiere(context, matiere) {\n      return MatiereService.update(matiere).then(() => {\n        return context.dispatch(\"getMatieres\", {});\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    //delete matiere\n    deleteMatiere(context, id) {\n      return MatiereService.destroy(id).then(() => {\n        return context.dispatch(\"getMatieres\", {});\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    addMatiere(context, matiere) {\n      return MatiereService.create(matiere).then(() => {\n        return context.dispatch(\"getMatieres\", {});\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    arrivageMatieres(context, matieres) {\n      return MatiereService.arrivage(matieres).then(() => {\n        return context.dispatch(\"getMatieres\", {});\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    }\n\n  },\n  getters: {\n    getMatieres: state => state.matieres\n  }\n};\nexport default usersModule;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/vost-app/src/store/matiereModule.js"],"names":["MatiereService","defaultState","matieres","usersModule","state","mutations","getMatieres","console","log","actions","context","query","get","then","res","commit","data","catch","err","dispatch","response","message","updateMatiere","matiere","update","deleteMatiere","id","destroy","addMatiere","create","arrivageMatieres","arrivage","getters"],"mappings":"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","sourcesContent":["import MatiereService from \"@/services/MatiereService\";\r\nconst defaultState = () => ({\r\n\tmatieres: [],\r\n});\r\nconst usersModule = {\r\n\tstate: defaultState(),\r\n\tmutations: {\r\n        getMatieres(state, matieres) {\r\n            console.log(matieres);\r\n\t\t\tstate.matieres = matieres;\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n        getMatieres(context, query) {\r\n            console.log(query);\r\n\t\t\treturn MatiereService.get(query)\r\n                .then((res) => {\r\n                    console.log(res)\r\n\t\t\t\t\treturn context.commit(\"getMatieres\", res.data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn context.dispatch(\"add-error\", err.response.data.message);\r\n\t\t\t\t});\r\n        },\r\n        //update matiere\r\n        updateMatiere(context, matiere) {\r\n            return MatiereService.update(matiere)\r\n                .then(() => {\r\n                    return context.dispatch(\"getMatieres\", {});\r\n                })\r\n                .catch((err) => {\r\n                    return context.dispatch(\"add-error\", err.response.data.message);\r\n                });\r\n        },\r\n        //delete matiere\r\n        deleteMatiere(context, id) {\r\n            return MatiereService.destroy(id)\r\n                .then(() => {\r\n                    return context.dispatch(\"getMatieres\", {});\r\n                })\r\n                .catch((err) => {\r\n                    return context.dispatch(\"add-error\", err.response.data.message);\r\n                });\r\n        },\r\n        addMatiere(context, matiere) {\r\n            return MatiereService.create(matiere)\r\n                .then(() => {\r\n                    return context.dispatch(\"getMatieres\", {});\r\n                })\r\n                .catch((err) => {\r\n                    return context.dispatch(\"add-error\", err.response.data.message);\r\n                });\r\n        },\r\n        arrivageMatieres(context, matieres) {\r\n            return MatiereService.arrivage(matieres)\r\n                .then(() => {\r\n                    return context.dispatch(\"getMatieres\", {});\r\n                })\r\n                .catch((err) => {\r\n                    return context.dispatch(\"add-error\", err.response.data.message);\r\n                });\r\n            \r\n        }\r\n\t},\r\n\tgetters: {\r\n\t\tgetMatieres: (state) => state.matieres,\r\n\t},\r\n};\r\n\r\nexport default usersModule;\r\n"]},"metadata":{},"sourceType":"module"}