{"ast":null,"code":"import Api from \"./api\";\nexport function get(query) {\n  return Api.get(\"/user\", { ...query\n  });\n}\nexport function show(id) {\n  return Api.get('/user/' + id);\n}\nexport function create(user) {\n  return Api.post('/user', user);\n}\nexport function destroy(id) {\n  return Api.delete(`/user/${id}`);\n}\nexport function update(user) {\n  return Api.patch(`/user/${user.id}`, user);\n}\nexport function hasRight(user, action\n/*object*/\n) {\n  if (!user.Profile.Autorisations.find(a => a.nom == action)) return false; //if (action.split('-')[1] == 'fonction' && object.id == user.Profile.id) return false;\n\n  return true;\n}\nexport default {\n  get,\n  create,\n  show,\n  destroy,\n  update,\n  hasRight\n};","map":{"version":3,"sources":["C:/Users/Dell/Desktop/vost-app/src/services/UserService.js"],"names":["Api","get","query","show","id","create","user","post","destroy","delete","update","patch","hasRight","action","Profile","Autorisations","find","a","nom"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,OAAO,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAC1B,SAAOF,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiB,EAAE,GAAGC;AAAL,GAAjB,CAAP;AACA;AACD,OAAO,SAASC,IAAT,CAAcC,EAAd,EAAkB;AACrB,SAAOJ,GAAG,CAACC,GAAJ,CAAQ,WAAWG,EAAnB,CAAP;AACH;AACD,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACzB,SAAON,GAAG,CAACO,IAAJ,CAAS,OAAT,EAAiBD,IAAjB,CAAP;AACH;AACD,OAAO,SAASE,OAAT,CAAkBJ,EAAlB,EAAqB;AACxB,SAAOJ,GAAG,CAACS,MAAJ,CAAY,SAAQL,EAAG,EAAvB,CAAP;AACH;AACD,OAAO,SAASM,MAAT,CAAgBJ,IAAhB,EAAsB;AACzB,SAAON,GAAG,CAACW,KAAJ,CAAW,SAAQL,IAAI,CAACF,EAAG,EAA3B,EAA6BE,IAA7B,CAAP;AACH;AACD,OAAO,SAASM,QAAT,CAAkBN,IAAlB,EAAwBO;AAAQ;AAAhC,EAA4C;AAC/C,MAAI,CAACP,IAAI,CAACQ,OAAL,CAAaC,aAAb,CAA2BC,IAA3B,CAAgCC,CAAC,IAAIA,CAAC,CAACC,GAAF,IAASL,MAA9C,CAAL,EAA4D,OAAO,KAAP,CADb,CAE/C;;AACA,SAAO,IAAP;AACH;AACD,eAAe;AACXZ,EAAAA,GADW;AAEXI,EAAAA,MAFW;AAGXF,EAAAA,IAHW;AAIXK,EAAAA,OAJW;AAKXE,EAAAA,MALW;AAMXE,EAAAA;AANW,CAAf","sourcesContent":["import Api from \"./api\";\r\n\r\nexport function get(query) {\r\n\treturn Api.get(\"/user\", { ...query });\r\n}\r\nexport function show(id) {\r\n    return Api.get('/user/' + id);\r\n}\r\nexport function create(user) {\r\n    return Api.post('/user',user)\r\n}\r\nexport function destroy (id){\r\n    return Api.delete(`/user/${id}`)\r\n}\r\nexport function update(user) {\r\n    return Api.patch(`/user/${user.id}`,user)\r\n}\r\nexport function hasRight(user, action, /*object*/) {\r\n    if (!user.Profile.Autorisations.find(a => a.nom == action)) return false;\r\n    //if (action.split('-')[1] == 'fonction' && object.id == user.Profile.id) return false;\r\n    return true;\r\n}\r\nexport default {\r\n    get,\r\n    create,\r\n    show,\r\n    destroy,\r\n    update,\r\n    hasRight\r\n};\r\n"]},"metadata":{},"sourceType":"module"}