{"ast":null,"code":"import AuthServices from \"@/services/AuthServices\";\nimport FonctionService from \"@/services/FonctionService\";\n\nconst defaultState = () => ({\n  fonctions: [],\n  autorisations: []\n});\n\nconst fonctionsModule = {\n  state: defaultState(),\n  mutations: {\n    getFonctions(state, fonctions) {\n      state.fonctions = fonctions;\n    },\n\n    getAutorisations(state, autorisations) {\n      state.autorisations = autorisations;\n    }\n\n  },\n  actions: {\n    getFonctions(context, query) {\n      return FonctionService.get(query).then(res => {\n        return context.commit(\"getFonctions\", res.data);\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    getAutorisations(context, query) {\n      return AuthServices.getAutorisations(query).then(res => {\n        return context.commit(\"getAutorisations\", res.data);\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    deleteFonction(context, id) {\n      return FonctionService.destroy(id).then(() => {\n        return context.dispatch(\"getFonctions\", {});\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    addFonction(context, fonction) {\n      return FonctionService.create(fonction).then(() => {\n        return context.dispatch(\"getFonctions\", {});\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    updateFonction(context, fonction) {\n      return FonctionService.update(fonction).then(() => {\n        return context.dispatch(\"getFonctions\", {});\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    }\n\n  },\n  getters: {\n    getFonctions: state => state.fonctions,\n    getAutorisations: state => state.autorisations\n  }\n};\nexport default fonctionsModule;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/vost-app/src/store/fonctionModule.js"],"names":["AuthServices","FonctionService","defaultState","fonctions","autorisations","fonctionsModule","state","mutations","getFonctions","getAutorisations","actions","context","query","get","then","res","commit","data","catch","err","dispatch","response","message","deleteFonction","id","destroy","addFonction","fonction","create","updateFonction","update","getters"],"mappings":"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","sourcesContent":["import AuthServices from \"@/services/AuthServices\";\r\nimport FonctionService from \"@/services/FonctionService\";\r\nconst defaultState = () => ({\r\n\tfonctions: [],\r\n\tautorisations: [],\r\n});\r\nconst fonctionsModule = {\r\n\tstate: defaultState(),\r\n\tmutations: {\r\n\t\tgetFonctions(state, fonctions) {\r\n\t\t\tstate.fonctions = fonctions;\r\n\t\t},\r\n\t\tgetAutorisations(state, autorisations) {\r\n\t\t\tstate.autorisations = autorisations;\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n\t\tgetFonctions(context, query) {\r\n\t\t\treturn FonctionService.get(query)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\treturn context.commit(\"getFonctions\", res.data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn context.dispatch(\"add-error\", err.response.data.message);\r\n\t\t\t\t});\r\n        },\r\n        getAutorisations(context, query) {\r\n            return AuthServices.getAutorisations(query)\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\treturn context.commit(\"getAutorisations\", res.data);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\treturn context.dispatch(\"add-error\", err.response.data.message);\r\n\t\t\t\t\t\t\t});\r\n        },\r\n\t\tdeleteFonction(context, id) {\r\n\t\t\treturn FonctionService.destroy(id)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn context.dispatch(\"getFonctions\", {});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn context.dispatch(\"add-error\", err.response.data.message);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\taddFonction(context, fonction) {\r\n\t\t\treturn FonctionService.create(fonction)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn context.dispatch(\"getFonctions\", {});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn context.dispatch(\"add-error\", err.response.data.message);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tupdateFonction(context, fonction) {\r\n\t\t\treturn FonctionService.update(fonction)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn context.dispatch(\"getFonctions\", {});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn context.dispatch(\"add-error\", err.response.data.message);\r\n\t\t\t\t});\r\n\t\t},\r\n\t},\r\n\tgetters: {\r\n\t\tgetFonctions: (state) => state.fonctions,\r\n\t\tgetAutorisations: (state) => state.autorisations,\r\n\t},\r\n};\r\n\r\nexport default fonctionsModule;\r\n"]},"metadata":{},"sourceType":"module"}