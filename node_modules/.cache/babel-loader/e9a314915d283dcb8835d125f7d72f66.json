{"ast":null,"code":"import AuthService from \"@/services/AuthServices\";\nimport UserService from \"@/services/UserService\";\n\nconst defaultState = () => ({\n  jwt: \"\",\n  user: null,\n  authenticated: false,\n  users: []\n});\n\nconst usersModule = {\n  state: defaultState(),\n  mutations: {\n    login(state, {\n      user,\n      token\n    }) {\n      state.jwt = token;\n      state.user = user;\n      state.authenticated = true;\n    },\n\n    logout(state) {\n      /* eslint-disable-next-line */\n      // state = {...defaultState()};\n      Object.assign(state, defaultState());\n      console.log(state);\n    },\n\n    getUsers(state, users) {\n      state.users = users;\n    },\n\n    refresh(state, {\n      user\n    }) {\n      state.user = user;\n    }\n\n  },\n  actions: {\n    login(context, credidentials) {\n      return AuthService.login(credidentials).then(res => {\n        context.commit(\"login\", res.data);\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    checkAuth(context) {\n      return AuthService.checklogin(context.state.jwt).then(res => {\n        context.commit(\"refresh\", res.data);\n      }).catch(() => {\n        context.commit(\"logout\");\n      });\n    },\n\n    logout(context) {\n      context.commit(\"logout\");\n    },\n\n    getUsers(context, query) {\n      return UserService.get(query).then(res => {\n        return context.commit(\"getUsers\", res.data);\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    deleteUser(context, id) {\n      return UserService.destroy(id).then(() => {\n        return context.dispatch(\"getUsers\", {});\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    addUser(context, user) {\n      return UserService.create(user).then(() => {\n        return context.dispatch(\"getUsers\");\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    },\n\n    updateUser(context, user) {\n      return UserService.update(user).then(() => {\n        return context.dispatch(\"getUsers\");\n      }).catch(err => {\n        return context.dispatch(\"add-error\", err.response.data.message);\n      });\n    }\n\n  },\n  getters: {\n    isAuth: state => state.authenticated,\n    getCurrentUser: state => state.user,\n    getUsers: state => state.users,\n    getJwt: state => state.jwt\n  }\n};\nexport default usersModule;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/vost-app/src/store/usersModule.js"],"names":["AuthService","UserService","defaultState","jwt","user","authenticated","users","usersModule","state","mutations","login","token","logout","Object","assign","console","log","getUsers","refresh","actions","context","credidentials","then","res","commit","data","catch","err","dispatch","response","message","checkAuth","checklogin","query","get","deleteUser","id","destroy","addUser","create","updateUser","update","getters","isAuth","getCurrentUser","getJwt"],"mappings":"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","sourcesContent":["import AuthService from \"@/services/AuthServices\";\r\nimport UserService from \"@/services/UserService\";\r\nconst defaultState = () => ({\r\n\tjwt: \"\",\r\n\tuser: null,\r\n\tauthenticated: false,\r\n\tusers: [],\r\n});\r\nconst usersModule = {\r\n\tstate: defaultState(),\r\n\tmutations: {\r\n\t\tlogin(state, { user, token }) {\r\n\t\t\tstate.jwt = token;\r\n\t\t\tstate.user = user;\r\n\t\t\tstate.authenticated = true;\r\n\t\t},\r\n\t\tlogout(state) {\r\n\t\t\t/* eslint-disable-next-line */\r\n\t\t\t// state = {...defaultState()};\r\n\t\t\tObject.assign(state, defaultState());\r\n\t\t\tconsole.log(state)\r\n\t\t},\r\n\t\tgetUsers(state, users) {\r\n\t\t\tstate.users = users;\r\n\t\t},\r\n\t\trefresh(state, { user }) {\r\n\t\t\tstate.user = user;\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n\t\tlogin(context, credidentials) {\r\n\t\t\treturn AuthService.login(credidentials)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tcontext.commit(\"login\", res.data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn context.dispatch(\"add-error\", err.response.data.message);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tcheckAuth(context) {\r\n\t\t\treturn AuthService.checklogin(context.state.jwt)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tcontext.commit(\"refresh\", res.data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\tcontext.commit(\"logout\");\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tlogout(context) {\r\n\t\t\tcontext.commit(\"logout\");\r\n\t\t},\r\n\t\tgetUsers(context, query) {\r\n\t\t\treturn UserService.get(query)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\treturn context.commit(\"getUsers\", res.data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn context.dispatch(\"add-error\", err.response.data.message);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tdeleteUser(context, id) {\r\n\t\t\treturn UserService.destroy(id)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn context.dispatch(\"getUsers\", {});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn context.dispatch(\"add-error\", err.response.data.message);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\taddUser(context, user) {\r\n\t\t\treturn UserService.create(user)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn context.dispatch(\"getUsers\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn context.dispatch(\"add-error\", err.response.data.message);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tupdateUser(context, user) {\r\n\t\t\treturn UserService.update(user)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn context.dispatch(\"getUsers\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn context.dispatch(\"add-error\", err.response.data.message);\r\n\t\t\t\t});\r\n\t\t},\r\n\t},\r\n\tgetters: {\r\n\t\tisAuth: (state) => state.authenticated,\r\n\t\tgetCurrentUser: (state) => state.user,\r\n\t\tgetUsers: (state) => state.users,\r\n\t\tgetJwt: (state) => state.jwt,\r\n\t},\r\n};\r\n\r\nexport default usersModule;\r\n"]},"metadata":{},"sourceType":"module"}