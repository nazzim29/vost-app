{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Op_1 = __importDefault(require(\"./Op\"));\n\nvar Iterator =\n/** @class */\nfunction () {\n  function Iterator(ops) {\n    this.ops = ops;\n    this.index = 0;\n    this.offset = 0;\n  }\n\n  Iterator.prototype.hasNext = function () {\n    return this.peekLength() < Infinity;\n  };\n\n  Iterator.prototype.next = function (length) {\n    if (!length) {\n      length = Infinity;\n    }\n\n    var nextOp = this.ops[this.index];\n\n    if (nextOp) {\n      var offset = this.offset;\n      var opLength = Op_1.default.length(nextOp);\n\n      if (length >= opLength - offset) {\n        length = opLength - offset;\n        this.index += 1;\n        this.offset = 0;\n      } else {\n        this.offset += length;\n      }\n\n      if (typeof nextOp.delete === 'number') {\n        return {\n          delete: length\n        };\n      } else {\n        var retOp = {};\n\n        if (nextOp.attributes) {\n          retOp.attributes = nextOp.attributes;\n        }\n\n        if (typeof nextOp.retain === 'number') {\n          retOp.retain = length;\n        } else if (typeof nextOp.insert === 'string') {\n          retOp.insert = nextOp.insert.substr(offset, length);\n        } else {\n          // offset should === 0, length should === 1\n          retOp.insert = nextOp.insert;\n        }\n\n        return retOp;\n      }\n    } else {\n      return {\n        retain: Infinity\n      };\n    }\n  };\n\n  Iterator.prototype.peek = function () {\n    return this.ops[this.index];\n  };\n\n  Iterator.prototype.peekLength = function () {\n    if (this.ops[this.index]) {\n      // Should never return 0 if our index is being managed correctly\n      return Op_1.default.length(this.ops[this.index]) - this.offset;\n    } else {\n      return Infinity;\n    }\n  };\n\n  Iterator.prototype.peekType = function () {\n    if (this.ops[this.index]) {\n      if (typeof this.ops[this.index].delete === 'number') {\n        return 'delete';\n      } else if (typeof this.ops[this.index].retain === 'number') {\n        return 'retain';\n      } else {\n        return 'insert';\n      }\n    }\n\n    return 'retain';\n  };\n\n  Iterator.prototype.rest = function () {\n    if (!this.hasNext()) {\n      return [];\n    } else if (this.offset === 0) {\n      return this.ops.slice(this.index);\n    } else {\n      var offset = this.offset;\n      var index = this.index;\n      var next = this.next();\n      var rest = this.ops.slice(this.index);\n      this.offset = offset;\n      this.index = index;\n      return [next].concat(rest);\n    }\n  };\n\n  return Iterator;\n}();\n\nexports.default = Iterator;","map":{"version":3,"sources":["../src/Iterator.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,IAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AAEA,IAAA,QAAA;AAAA;AAAA,YAAA;AAKE,WAAA,QAAA,CAAY,GAAZ,EAAqB;AACnB,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,KAAL,GAAa,CAAb;AACA,SAAK,MAAL,GAAc,CAAd;AACD;;AAED,EAAA,QAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,WAAO,KAAK,UAAL,KAAoB,QAA3B;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,MAAL,EAAoB;AAClB,QAAI,CAAC,MAAL,EAAa;AACX,MAAA,MAAM,GAAG,QAAT;AACD;;AACD,QAAM,MAAM,GAAG,KAAK,GAAL,CAAS,KAAK,KAAd,CAAf;;AACA,QAAI,MAAJ,EAAY;AACV,UAAM,MAAM,GAAG,KAAK,MAApB;AACA,UAAM,QAAQ,GAAG,IAAA,CAAA,OAAA,CAAG,MAAH,CAAU,MAAV,CAAjB;;AACA,UAAI,MAAM,IAAI,QAAQ,GAAG,MAAzB,EAAiC;AAC/B,QAAA,MAAM,GAAG,QAAQ,GAAG,MAApB;AACA,aAAK,KAAL,IAAc,CAAd;AACA,aAAK,MAAL,GAAc,CAAd;AACD,OAJD,MAIO;AACL,aAAK,MAAL,IAAe,MAAf;AACD;;AACD,UAAI,OAAO,MAAM,CAAC,MAAd,KAAyB,QAA7B,EAAuC;AACrC,eAAO;AAAE,UAAA,MAAM,EAAE;AAAV,SAAP;AACD,OAFD,MAEO;AACL,YAAM,KAAK,GAAO,EAAlB;;AACA,YAAI,MAAM,CAAC,UAAX,EAAuB;AACrB,UAAA,KAAK,CAAC,UAAN,GAAmB,MAAM,CAAC,UAA1B;AACD;;AACD,YAAI,OAAO,MAAM,CAAC,MAAd,KAAyB,QAA7B,EAAuC;AACrC,UAAA,KAAK,CAAC,MAAN,GAAe,MAAf;AACD,SAFD,MAEO,IAAI,OAAO,MAAM,CAAC,MAAd,KAAyB,QAA7B,EAAuC;AAC5C,UAAA,KAAK,CAAC,MAAN,GAAe,MAAM,CAAC,MAAP,CAAc,MAAd,CAAqB,MAArB,EAA6B,MAA7B,CAAf;AACD,SAFM,MAEA;AACL;AACA,UAAA,KAAK,CAAC,MAAN,GAAe,MAAM,CAAC,MAAtB;AACD;;AACD,eAAO,KAAP;AACD;AACF,KA3BD,MA2BO;AACL,aAAO;AAAE,QAAA,MAAM,EAAE;AAAV,OAAP;AACD;AACF,GAnCD;;AAqCA,EAAA,QAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACE,WAAO,KAAK,GAAL,CAAS,KAAK,KAAd,CAAP;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,QAAI,KAAK,GAAL,CAAS,KAAK,KAAd,CAAJ,EAA0B;AACxB;AACA,aAAO,IAAA,CAAA,OAAA,CAAG,MAAH,CAAU,KAAK,GAAL,CAAS,KAAK,KAAd,CAAV,IAAkC,KAAK,MAA9C;AACD,KAHD,MAGO;AACL,aAAO,QAAP;AACD;AACF,GAPD;;AASA,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,QAAI,KAAK,GAAL,CAAS,KAAK,KAAd,CAAJ,EAA0B;AACxB,UAAI,OAAO,KAAK,GAAL,CAAS,KAAK,KAAd,EAAqB,MAA5B,KAAuC,QAA3C,EAAqD;AACnD,eAAO,QAAP;AACD,OAFD,MAEO,IAAI,OAAO,KAAK,GAAL,CAAS,KAAK,KAAd,EAAqB,MAA5B,KAAuC,QAA3C,EAAqD;AAC1D,eAAO,QAAP;AACD,OAFM,MAEA;AACL,eAAO,QAAP;AACD;AACF;;AACD,WAAO,QAAP;AACD,GAXD;;AAaA,EAAA,QAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACE,QAAI,CAAC,KAAK,OAAL,EAAL,EAAqB;AACnB,aAAO,EAAP;AACD,KAFD,MAEO,IAAI,KAAK,MAAL,KAAgB,CAApB,EAAuB;AAC5B,aAAO,KAAK,GAAL,CAAS,KAAT,CAAe,KAAK,KAApB,CAAP;AACD,KAFM,MAEA;AACL,UAAM,MAAM,GAAG,KAAK,MAApB;AACA,UAAM,KAAK,GAAG,KAAK,KAAnB;AACA,UAAM,IAAI,GAAG,KAAK,IAAL,EAAb;AACA,UAAM,IAAI,GAAG,KAAK,GAAL,CAAS,KAAT,CAAe,KAAK,KAApB,CAAb;AACA,WAAK,MAAL,GAAc,MAAd;AACA,WAAK,KAAL,GAAa,KAAb;AACA,aAAO,CAAC,IAAD,EAAO,MAAP,CAAc,IAAd,CAAP;AACD;AACF,GAdD;;AAeF,SAAA,QAAA;AAAC,CA7FD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Op_1 = __importDefault(require(\"./Op\"));\nvar Iterator = /** @class */ (function () {\n    function Iterator(ops) {\n        this.ops = ops;\n        this.index = 0;\n        this.offset = 0;\n    }\n    Iterator.prototype.hasNext = function () {\n        return this.peekLength() < Infinity;\n    };\n    Iterator.prototype.next = function (length) {\n        if (!length) {\n            length = Infinity;\n        }\n        var nextOp = this.ops[this.index];\n        if (nextOp) {\n            var offset = this.offset;\n            var opLength = Op_1.default.length(nextOp);\n            if (length >= opLength - offset) {\n                length = opLength - offset;\n                this.index += 1;\n                this.offset = 0;\n            }\n            else {\n                this.offset += length;\n            }\n            if (typeof nextOp.delete === 'number') {\n                return { delete: length };\n            }\n            else {\n                var retOp = {};\n                if (nextOp.attributes) {\n                    retOp.attributes = nextOp.attributes;\n                }\n                if (typeof nextOp.retain === 'number') {\n                    retOp.retain = length;\n                }\n                else if (typeof nextOp.insert === 'string') {\n                    retOp.insert = nextOp.insert.substr(offset, length);\n                }\n                else {\n                    // offset should === 0, length should === 1\n                    retOp.insert = nextOp.insert;\n                }\n                return retOp;\n            }\n        }\n        else {\n            return { retain: Infinity };\n        }\n    };\n    Iterator.prototype.peek = function () {\n        return this.ops[this.index];\n    };\n    Iterator.prototype.peekLength = function () {\n        if (this.ops[this.index]) {\n            // Should never return 0 if our index is being managed correctly\n            return Op_1.default.length(this.ops[this.index]) - this.offset;\n        }\n        else {\n            return Infinity;\n        }\n    };\n    Iterator.prototype.peekType = function () {\n        if (this.ops[this.index]) {\n            if (typeof this.ops[this.index].delete === 'number') {\n                return 'delete';\n            }\n            else if (typeof this.ops[this.index].retain === 'number') {\n                return 'retain';\n            }\n            else {\n                return 'insert';\n            }\n        }\n        return 'retain';\n    };\n    Iterator.prototype.rest = function () {\n        if (!this.hasNext()) {\n            return [];\n        }\n        else if (this.offset === 0) {\n            return this.ops.slice(this.index);\n        }\n        else {\n            var offset = this.offset;\n            var index = this.index;\n            var next = this.next();\n            var rest = this.ops.slice(this.index);\n            this.offset = offset;\n            this.index = index;\n            return [next].concat(rest);\n        }\n    };\n    return Iterator;\n}());\nexports.default = Iterator;\n//# sourceMappingURL=Iterator.js.map"]},"metadata":{},"sourceType":"script"}